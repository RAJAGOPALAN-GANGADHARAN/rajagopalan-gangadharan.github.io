<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Swift Notes on Rajagopalan</title><link>https://rajagopalan-gangadharan.github.io/notes/swift/</link><description>Recent content in Swift Notes on Rajagopalan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rajagopalan-gangadharan.github.io/notes/swift/index.xml" rel="self" type="application/rss+xml"/><item><title>Handy Commands for apple swift repo</title><link>https://rajagopalan-gangadharan.github.io/notes/swift/buildcmds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rajagopalan-gangadharan.github.io/notes/swift/buildcmds/</guid><description>Build Build with Test : utils/build-script --release-debuginfo --test --skip-early-swift-driver Build without test: utils/build-script --release-debuginfo --skip-early-swift-driver Note these builds produce a debug build which can take a lot of space Setting sccache is skipped because snap is not available in Linux Maybe try later with alternatives like ccache Incremental Build: ninja -C ../build/Ninja-RelWithDebInfoAssert/swift-linux-x86_64/ To use built swift binary: export bswift=/mnt/d/SwiftOpen/build/Ninja-RelWithDebInfoAssert/swift-linux-x86_64/bin/swift (Add to .bashrc if you want it permanently) Invoke this with ${bswift} But there is a better way via sym links, eh too lazy Useful Links + Compile Instructions : https://github.</description></item></channel></rss>