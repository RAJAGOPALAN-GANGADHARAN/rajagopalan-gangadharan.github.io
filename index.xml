<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rajagopalan</title><link>https://rajagopalan-gangadharan.github.io/</link><description>Recent content on Rajagopalan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 08 Jun 2020 08:06:25 +0600</lastBuildDate><atom:link href="https://rajagopalan-gangadharan.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Search Results</title><link>https://rajagopalan-gangadharan.github.io/search/</link><pubDate>Tue, 08 Jun 2010 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/search/</guid><description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description></item><item><title>Appbox</title><link>https://rajagopalan-gangadharan.github.io/appbox/</link><pubDate>Fri, 16 Jul 2021 18:59:54 +0530</pubDate><guid>https://rajagopalan-gangadharan.github.io/appbox/</guid><description>appbox: khhlkj</description></item><item><title>Bellman Ford</title><link>https://rajagopalan-gangadharan.github.io/posts/useful-tech/bellman-ford/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/useful-tech/bellman-ford/</guid><description/></item><item><title>Binary Search</title><link>https://rajagopalan-gangadharan.github.io/posts/useful-tech/binary-search/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/useful-tech/binary-search/</guid><description>Increasing Array lower_bound() returns value that is greater than or equal to x;
upper_bound() returns value strictly greater than x;
Decreasing array: lower_bound() returns value that is less than or equal to x;
upper_bound() retruns value that is strictly less than x;</description></item><item><title>DFS Order</title><link>https://rajagopalan-gangadharan.github.io/posts/useful-tech/dfs-order/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/useful-tech/dfs-order/</guid><description>A very useful technique.It basically has 2 arrays one is Intime and the other is outTime. inTime says when it enters a recursion stack and outTime says when it exits the recursion stack. It is useful to check if a node v is present in the subtree of node u. If inTime[u]&amp;lt;inTime[v] and outTime[u]&amp;gt; outTime[v].
It can also be useful in counting number of nodes that belong to a particular tree at a particular height.</description></item><item><title>General facts</title><link>https://rajagopalan-gangadharan.github.io/posts/general/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/general/</guid><description>Online vs Offline Online algorithm means getting output after processing at ith element for eg: median of a stream of elements, Whereas in case of online means using all n elements to arrive at an output.</description></item><item><title>LCA</title><link>https://rajagopalan-gangadharan.github.io/posts/useful-tech/lca/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/useful-tech/lca/</guid><description>LCA Using Binary Lifting k=0 means the parent node Create a table P[K][N] -&amp;gt; N is number of nodes 2^k&amp;lt;=N So k&amp;lt;=logN Hence Size of table is N*logN jumps are made in order of powers of 2 -&amp;gt;1,2,4...etc trying to divide by 2 let mid=par[i][k-1] (2^(k-1)th parent if exists) par[i][k] is par[mid][k-1] Its basically dividing a big jump into 2. First make 2 nodes that we are going to find LCA to same depth using Walk function if current jump results -1 then we have jumped of the table.</description></item><item><title>Math facts</title><link>https://rajagopalan-gangadharan.github.io/posts/maths/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/maths/</guid><description>Segmented Sieve Use When we have to generate large number of prime Numbers Click Here
BitHacks Number of bits required to represent a number:
For More Bit Tricks:Click Here Useful nCr Technique Divide by their GCD&amp;rsquo;s to prevent overflow
For fast Calculation:
ll NcR(ll n, ll r) { ll p = 1, k = 1; if (n - r &amp;lt; r) r = n - r; if (r !</description></item><item><title>Patience Sort</title><link>https://rajagopalan-gangadharan.github.io/posts/useful-tech/patience-sort/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/useful-tech/patience-sort/</guid><description>It is an online sorting algorithm aimed to create piles of cards in such a way that piles are in increasing order down wards.
It can be used to find LIS in O(NlogN) time. Can also be used to find (minimum)number of distinct LIS.
VII dp; for(int i=arr.size()-1;i&amp;gt;=0;--i) { int x=arr[i]; auto it=upper_bound(all(dp),x); if(it==dp.end()) dp.pb(x); else *it=x; } cout&amp;lt;&amp;lt;dp.size();</description></item><item><title>SCC</title><link>https://rajagopalan-gangadharan.github.io/posts/useful-tech/scc/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/useful-tech/scc/</guid><description>Kosaraju&amp;rsquo;s SCC A strongly Connected Component is for a directed graph. For an undirected graph we say it is a connected Component if we can reach a vertex from any vertex of a connected component. In case of SCC its same but called differently.
Steps Perform DFS in forward graph and make a note of nodes in decreasing order of outtime. Perform DFS in reverse graph(instead of for loop use the decreasing order u found).</description></item><item><title>Template Library</title><link>https://rajagopalan-gangadharan.github.io/posts/template-library/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/template-library/</guid><description>Fenwick Tree #include&amp;lt;bits/stdc++.h&amp;gt;using namespace std; template&amp;lt;typename T&amp;gt; class FenwickTree { vector&amp;lt;T&amp;gt; BIT; int n; public: FenwickTree(int n,vector&amp;lt;T&amp;gt;&amp;amp; arr,T def) { BIT.assign(n + 1, def); this-&amp;gt;n = n; } void update(int i,T v) { while (i &amp;lt;= n) BIT[i] += v, i += i &amp;amp; -i; } T query(int i,T def) { //get from 0 to i T sum = def; while(i&amp;gt;0) sum += BIT[i], i -= i &amp;amp; -i; return sum; } }; class RangeFenwickTree { int n; vector&amp;lt;int&amp;gt; BIT1; vector&amp;lt;int&amp;gt; BIT2; public: RangeFenwickTree(int n,vector&amp;lt;int&amp;gt;&amp;amp; arr) { this-&amp;gt;n = n; BIT1.</description></item><item><title>Time Complexity Analysis</title><link>https://rajagopalan-gangadharan.github.io/posts/time-complexity/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/time-complexity/</guid><description>General TC
Harmonic Sum Analysis When a function goes in the form of for(int i=1;i&amp;lt;=n;++i) { for(int j=2*i;j&amp;lt;=n;j+=i) cout&amp;lt;&amp;lt;(i,j); }
The Summation part takes O(logN) hence the total time is O(N*logN)
Note: Find Why it is logN</description></item><item><title>Trees</title><link>https://rajagopalan-gangadharan.github.io/posts/useful-datastructures/trees/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/useful-datastructures/trees/</guid><description>Some Facts about trees Simple path is a path that doesn&amp;rsquo;t contain any node twice. A tree has n-1 edges! Segment Trees Use segment trees for questions on updating values and querying. Can be used with complex operations like pairs,sets etc. Find very effecient and faster updating (used to insert too), by Finding path to root from one node.
void update(int pos,int val){ pos += k; tree[pos] = val; int odd = 1; //this switches between alternate levels of the segment tree goes upwards while(pos&amp;gt;&amp;gt;=1 &amp;gt;0){ /* use this in case for level switching if(odd) tree[pos] = tree[2*pos] | tree[2*pos+1]; else tree[pos] = tree[2*pos] ^ tree[2*pos+1]; odd = 1-odd; */ tree[pos]=tree[2*pos]+tree[2*pos+1]; } } for(int i=0;i&amp;lt;n;i++){ int val; cin&amp;gt;&amp;gt;val; update(i,val); }</description></item><item><title>Tutorial Links</title><link>https://rajagopalan-gangadharan.github.io/posts/tutorial-links/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/tutorial-links/</guid><description>Binary Search :
Tutorial, Problems, Tutorial, Implementation, Problem Quicksort :
Tutorial, Implementation, Tutorial Merge Sort :
Tutorial, Implementation, Tutorial Suffix Array :
Tutorial, Tutorial, Implementation, Tutorial, Implementation, Problem, Problem Knuth-Morris-Pratt Algorithm (KMP) :
Tutorial, Tutorial, Implementation, Tutorial, Problem Rabin-Karp Algorithm :
Tutorial, Implementation, Tutorial, Problem, Problem Tries :
Tutorial, Problems, Tutorial : I, II, Tutorial, Problem, Problem, Problem Depth First Traversal of a Graph :
Tutorial, Implementation, Tutorial, Problems, Problem, Problem, Problem Breadth First Traversal of a Graph :</description></item><item><title>Coding week #1 - Experience GSoc</title><link>https://rajagopalan-gangadharan.github.io/posts/gsoc/cw1/</link><pubDate>Tue, 04 Jun 2019 17:04:02 +0530</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/gsoc/cw1/</guid><description>Hello everybody. This is me Rajagopalan working on getting webkit2 on haiku. Previously as you guys know we were trying to get IPC working. Well we have succeeded in that after hitting some obstacles.
Message passing should not involve mainloop it should be totally dependent on the workqueue only. As the mainloop can be blocked because of JS Execution which leaves slow performance or even crash. Also we stumbled upon an IPC deadlock when we used mainloop (main application loop) as a proxy to send and receive messages.</description></item><item><title>Mid Community Bonding-- Gsoc</title><link>https://rajagopalan-gangadharan.github.io/posts/gsoc/mid-com/</link><pubDate>Mon, 20 May 2019 23:31:39 +0530</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/gsoc/mid-com/</guid><description>Introduction: Hello Everybody, I am G.Rajagopalan working on porting webkit2 to haiku as a part of my GSoC project. So here I am to share our experiences and work regarding the project 😄.
Bonding Process: I have been with haiku for the past 6 (or 7 months I think) which went like a blink of an eye. I can definitely say that it is a memorable journey with Haiku. I owe it to the beautiful and friendly people who work for haiku.</description></item><item><title>Coding week no 2 and 3 - Gsoc</title><link>https://rajagopalan-gangadharan.github.io/posts/gsoc/cw2/</link><pubDate>Wed, 08 May 2019 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/gsoc/cw2/</guid><description>Report for Coding Week #2 and #3 Love that your beautiful face is reading my Blog today❤️. First all I woul like to ask sorry to my fans (if any 😅😂) for delaying the posts. Prepare to get blown away🎉🎉💻
Ok let's all jump into the world of webkit shall we?
History is awesome (just kidding 😉😉) Lets rewind a bit! Getting stuff to compile and build (painful but totally worth it) Oh ya not to mention :making friends!</description></item><item><title>Math facts</title><link>https://rajagopalan-gangadharan.github.io/posts/gsoc/introduction-copy-4/</link><pubDate>Wed, 08 May 2019 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/gsoc/introduction-copy-4/</guid><description>BAlert(&amp;#34;Hello World&amp;#34;,&amp;#34;Introducing myself&amp;#34;, &amp;#34;Awesome&amp;#34;,&amp;#34;Cool&amp;#34;,&amp;#34;Excited&amp;#34;,B_SUMMER_IS_FUN); Introduction: I am RAJAGOPALAN GANGADHARAN doing Computer science Engineering in India and a GSOC 2019 participant with aim of porting Webkit2 to Haiku. First of all I would like to thank everybody for giving me this wonderful opportunity and I promise to not let the hopes down. I didn&amp;rsquo;t know much about BeOS until I saw Haiku. Well to be honest I fell in love with the GUI of haiku.</description></item><item><title>Math facts</title><link>https://rajagopalan-gangadharan.github.io/posts/gsoc/introduction/</link><pubDate>Wed, 08 May 2019 08:06:25 +0600</pubDate><guid>https://rajagopalan-gangadharan.github.io/posts/gsoc/introduction/</guid><description>BAlert(&amp;#34;Hello World&amp;#34;,&amp;#34;Introducing myself&amp;#34;, &amp;#34;Awesome&amp;#34;,&amp;#34;Cool&amp;#34;,&amp;#34;Excited&amp;#34;,B_SUMMER_IS_FUN); Introduction: I am RAJAGOPALAN GANGADHARAN doing Computer science Engineering in India and a GSOC 2019 participant with aim of porting Webkit2 to Haiku. First of all I would like to thank everybody for giving me this wonderful opportunity and I promise to not let the hopes down. I didn&amp;rsquo;t know much about BeOS until I saw Haiku. Well to be honest I fell in love with the GUI of haiku.</description></item><item><title>Search Results</title><link>https://rajagopalan-gangadharan.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rajagopalan-gangadharan.github.io/search/</guid><description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description></item></channel></rss>